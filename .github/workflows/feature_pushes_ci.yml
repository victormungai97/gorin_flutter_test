# This file defines a CI/CD workflow to run in Github Actions on pushes to feature (non-production branches)

# This workflow shall build the flutter app and release to test tracks e.g. on web


# Name of workflow.
name: Flutter Build and Release to Test Tracks


# Controls when the workflow will run depending on given event(s) e.g. pushing code using git push
on:
  push:
    branches-ignore: [ master, main ]

  # Allows one to run this workflow manually from the Actions tab
  workflow_dispatch:


# Set environment variables that are scoped at the workflow level
env:
  ENVIRONMENT: development
  FIREBASE_WEB_APPID: gorin-flutter-test


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # id of job, a string that is unique to the "jobs" node above.
  build_web:
    # Title that will appear for job when specific workflow runs
    name: Build a web app
    # Type of virtual machine (runner) on which to execute the job
    runs-on: ubuntu-latest
    # Sequence of tasks/actions/shell commands with which to which to execute / install the needed pre-requisites for the job
    steps:
      # The branch or tag ref that triggered the workflow will be checked out.
      # See: https://github.com/actions/checkout
      - name: Check out repository code
        uses: actions/checkout@v3

      # Install Java from previously created Github Action
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '12.x'
      - run: java -version

      # Install Flutter from previously created Github Action
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter --version

      - name: Get all Flutter Packages # Label for one's step to display on GitHub.
        run: flutter pub get # This will execute the command provided to it

      - name: Carry out automated code generation
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Build application for deployment on website
        run: flutter build web --web-renderer canvaskit --dart-define="flavor=${ENVIRONMENT}"

      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch

        # Release via Firebase Hosting
      - name: Deploy to Firebase Hosting (Preview)
        id: firebase_hosting_preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_GORIN_FLUTTER_TEST }}'
          expires: 30d  # length of time preview channel should remain active after the last deploy
          projectId: ${{ env.FIREBASE_WEB_APPID }}
          channelId: 'pr-${{ github.event.head_commit.author.username }}-${{ steps.extract_branch.outputs.branch }}'

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2.12.1
        with:
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Pulling '${{ github.ref }}' into 'master'"
          pr_body: |
            :crown: *An automated PR*
            
            Author: ${{ github.event.head_commit.author.name }}

            Message: ${{ github.event.head_commit.message }}

            Preview URL: "${{ steps.firebase_hosting_preview.outputs.details_url }}"
            
            _Created by [repo-sync/pull-request](https://github.com/repo-sync/pull-request)_
          source_branch: ""
          pr_label: "automated-pr"
          pr_allow_empty: true                              # Creates pull request even if there are no changes
          pr_assignee: "${{ github.actor }}"
          pr_reviewer: "${{ github.repository_owner }}"

